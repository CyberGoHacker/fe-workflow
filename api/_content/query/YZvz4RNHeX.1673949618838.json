{"_path":"/docs/js-css","_dir":"docs","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"JS & CSS代码优化","description":"JS & CSS代码优化","excerpt":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"js-css-代码优化"},"children":[{"type":"text","value":"JS & CSS 代码优化"}]},{"type":"element","tag":"h2","props":{"id":"javascript-代码方面"},"children":[{"type":"text","value":"JavaScript 代码方面"}]},{"type":"element","tag":"h4","props":{"id":"使用文档碎片"},"children":[{"type":"text","value":"使用文档碎片"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"待添加元素 -> 文档碎片 -> 插入需要位置（减少 DOM 操作提高性能）"}]}]},{"type":"element","tag":"h4","props":{"id":"垃圾收集内存管理"},"children":[{"type":"text","value":"垃圾收集、内存管理"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"堆内存无用数据值为 null"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"栈内存占用取消"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"避免内存泄漏（全局变量、闭包、DOM 元素的引用、定时器）"}]}]},{"type":"element","tag":"h4","props":{"id":"web-worker"},"children":[{"type":"text","value":"Web Worker"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"有繁重计算的代码抽离到 Web Worker"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"预先加载和存储一些数据"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"使用 Comlink 来简化与 Web Worker 之间的通信"}]}]},{"type":"element","tag":"h4","props":{"id":"webassembly"},"children":[{"type":"text","value":"WebAssembly"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"将繁重的计算任务抽离到 WebAssembly 执行"}]}]},{"type":"element","tag":"h4","props":{"id":"虚拟列表"},"children":[{"type":"text","value":"虚拟列表"}]},{"type":"element","tag":"h4","props":{"id":"代码覆盖率识别并删除未使用的-css-js"},"children":[{"type":"text","value":"代码覆盖率识别并删除未使用的 CSS / JS"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Chrome Coverage 查看覆盖率结果，使用 import() 延迟加载"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"purgecss、UnCSS、Helium 检测 CSS 删除未使用的样式"}]}]},{"type":"element","tag":"h4","props":{"id":"检查修剪-javascript-包大小"},"children":[{"type":"text","value":"检查修剪 JavaScript 包大小"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"使用 Bundlephobia 了解添加一个 npm 包的代价"}]}]},{"type":"element","tag":"h2","props":{"id":"css-代码方面"},"children":[{"type":"text","value":"CSS 代码方面"}]},{"type":"element","tag":"h4","props":{"id":"内联首屏关键-css"},"children":[{"type":"text","value":"内联首屏关键 CSS"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"渲染首屏内容所需的关键 CSS 内联到 HTML 中"}]}]},{"type":"element","tag":"h4","props":{"id":"异步加载-css"},"children":[{"type":"text","value":"异步加载 CSS"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"设置 link rel=\"preload\""}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"动态创建样式表 link 元素并插入到 DOM 中"}]}]},{"type":"element","tag":"h4","props":{"id":"压缩去除无用-css"},"children":[{"type":"text","value":"压缩、去除无用 CSS"}]},{"type":"element","tag":"h4","props":{"id":"有选择地使用选择器"},"children":[{"type":"text","value":"有选择地使用选择器"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"CSS 选择器的匹配是从右向左进行的"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"嵌套的层级更多，匹配所要花费的时间代价自然更高"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"通配符和属性选择器效率最低"}]}]},{"type":"element","tag":"h4","props":{"id":"避免出现重绘重排"},"children":[{"type":"text","value":"避免出现重绘、重排"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"集中改变样式，不要一条一条地修改 DOM 的样式;"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"不要把 DOM 结点的属性值放在循环里当成循环里的变量;"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"为动画的 HTML 元件使用 fixed 或 absoult 的 position，那么修改他们的 CSS 是不会 reflow 的;"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"不使用 table 布局。因为可能很小的一个小改动会造成整个 table 的重新布局；"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"动画开始GPU加速，translate使用3D变化；"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"滚动的时候禁用hover事件，避免不必要的重绘；"}]}]},{"type":"element","tag":"h4","props":{"id":"提升渲染性能的css属性"},"children":[{"type":"text","value":"提升渲染性能的CSS属性"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"content-visibility 控制一个元素是否渲染其内容，并且允许浏览器跳过这些元素的布局与渲染；"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"will-change: transform 将元素提升为合成层；"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"contain-intrinsic-size 指定的元素自然大小，确保我们未渲染子元素的 div 仍然占据空间；"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"减少使用 @important，会影响浏览器的并行下载（只有css加载完才会发现 @important，再去加载、绘制）。"}]}]}]},"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"js-css-代码优化"},"children":[{"type":"text","value":"JS & CSS 代码优化"}]},{"type":"element","tag":"h2","props":{"id":"javascript-代码方面"},"children":[{"type":"text","value":"JavaScript 代码方面"}]},{"type":"element","tag":"h4","props":{"id":"使用文档碎片"},"children":[{"type":"text","value":"使用文档碎片"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"待添加元素 -> 文档碎片 -> 插入需要位置（减少 DOM 操作提高性能）"}]}]},{"type":"element","tag":"h4","props":{"id":"垃圾收集内存管理"},"children":[{"type":"text","value":"垃圾收集、内存管理"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"堆内存无用数据值为 null"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"栈内存占用取消"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"避免内存泄漏（全局变量、闭包、DOM 元素的引用、定时器）"}]}]},{"type":"element","tag":"h4","props":{"id":"web-worker"},"children":[{"type":"text","value":"Web Worker"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"有繁重计算的代码抽离到 Web Worker"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"预先加载和存储一些数据"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"使用 Comlink 来简化与 Web Worker 之间的通信"}]}]},{"type":"element","tag":"h4","props":{"id":"webassembly"},"children":[{"type":"text","value":"WebAssembly"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"将繁重的计算任务抽离到 WebAssembly 执行"}]}]},{"type":"element","tag":"h4","props":{"id":"虚拟列表"},"children":[{"type":"text","value":"虚拟列表"}]},{"type":"element","tag":"h4","props":{"id":"代码覆盖率识别并删除未使用的-css-js"},"children":[{"type":"text","value":"代码覆盖率识别并删除未使用的 CSS / JS"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Chrome Coverage 查看覆盖率结果，使用 import() 延迟加载"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"purgecss、UnCSS、Helium 检测 CSS 删除未使用的样式"}]}]},{"type":"element","tag":"h4","props":{"id":"检查修剪-javascript-包大小"},"children":[{"type":"text","value":"检查修剪 JavaScript 包大小"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"使用 Bundlephobia 了解添加一个 npm 包的代价"}]}]},{"type":"element","tag":"h2","props":{"id":"css-代码方面"},"children":[{"type":"text","value":"CSS 代码方面"}]},{"type":"element","tag":"h4","props":{"id":"内联首屏关键-css"},"children":[{"type":"text","value":"内联首屏关键 CSS"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"渲染首屏内容所需的关键 CSS 内联到 HTML 中"}]}]},{"type":"element","tag":"h4","props":{"id":"异步加载-css"},"children":[{"type":"text","value":"异步加载 CSS"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"设置 link rel=\"preload\""}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"动态创建样式表 link 元素并插入到 DOM 中"}]}]},{"type":"element","tag":"h4","props":{"id":"压缩去除无用-css"},"children":[{"type":"text","value":"压缩、去除无用 CSS"}]},{"type":"element","tag":"h4","props":{"id":"有选择地使用选择器"},"children":[{"type":"text","value":"有选择地使用选择器"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"CSS 选择器的匹配是从右向左进行的"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"嵌套的层级更多，匹配所要花费的时间代价自然更高"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"通配符和属性选择器效率最低"}]}]},{"type":"element","tag":"h4","props":{"id":"避免出现重绘重排"},"children":[{"type":"text","value":"避免出现重绘、重排"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"集中改变样式，不要一条一条地修改 DOM 的样式;"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"不要把 DOM 结点的属性值放在循环里当成循环里的变量;"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"为动画的 HTML 元件使用 fixed 或 absoult 的 position，那么修改他们的 CSS 是不会 reflow 的;"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"不使用 table 布局。因为可能很小的一个小改动会造成整个 table 的重新布局；"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"动画开始GPU加速，translate使用3D变化；"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"滚动的时候禁用hover事件，避免不必要的重绘；"}]}]},{"type":"element","tag":"h4","props":{"id":"提升渲染性能的css属性"},"children":[{"type":"text","value":"提升渲染性能的CSS属性"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"content-visibility 控制一个元素是否渲染其内容，并且允许浏览器跳过这些元素的布局与渲染；"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"will-change: transform 将元素提升为合成层；"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"contain-intrinsic-size 指定的元素自然大小，确保我们未渲染子元素的 div 仍然占据空间；"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"减少使用 @important，会影响浏览器的并行下载（只有css加载完才会发现 @important，再去加载、绘制）。"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"javascript-代码方面","depth":2,"text":"JavaScript 代码方面"},{"id":"css-代码方面","depth":2,"text":"CSS 代码方面"}]}},"_type":"markdown","_id":"content:docs:72.js-css.md","_source":"content","_file":"docs/72.js-css.md","_extension":"md"}